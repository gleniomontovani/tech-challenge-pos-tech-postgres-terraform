name: Database Migration

on:
  push:
  #pull_request:  
    branches:
      - main      

jobs:
  deploy_infrastructure:
    runs-on: ubuntu-latest
    env:
      TF_VAR_rds_database_name: ${{ secrets.DB_NAME }}
      TF_VAR_rds_user_name: ${{ secrets.DB_USERNAME }}
      TF_VAR_rds_password: ${{ secrets.DB_PASSWORD }}
      TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Checkout Repository
        uses: actions/checkout@v2    

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        id: init
        run: terraform init
        working-directory: ./terraform    
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./terraform

      - name: Plan Terraform
        run: terraform plan -out=tfplan -input=true 
        working-directory: ./terraform  
            
      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terraform apply -auto-approve tfplan
          postgres_db_endpoint=$(terraform output -raw postgres_db_endpoint  | awk 'NR==3' | awk -F' ' '{print $NF}')
          echo "$postgres_db_endpoint" > rds_endpoint.txt
        working-directory: ./terraform

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli   

      - name: Upload RDS Endpoint to S3
        run: |
          cd terraform
          aws s3 cp rds_endpoint.txt s3://${{ secrets.AWS_BUCKET }}/${{ secrets.AWS_S3_BUCKET_SOURCE_DB }}/rds_endpoint --acl private
          rm -r rds_endpoint.txt
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}  
